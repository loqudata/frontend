import { VisualizationSpec } from "vega-embed"

export const VEGA_EDITOR_URL = "https://vega.github.io/editor"
export const VEGA_SPECS = VEGA_EDITOR_URL + "/spec/vega/index.json"
export const VEGA_LITE_SPECS =
  VEGA_EDITOR_URL + "/spec/vega-lite/index.json"

async function get<T>(url: string): Promise<T> {
  const data = await fetch(url)
  return await data.json()
}

// Generated by https://quicktype.io

export type VegaChartSpecs = Record<string, Record<string, Chart[]>>

export interface Chart {
  name: string
  title: string
  descripton?: string
  png?: boolean
  description?: string
  style?: string
}

/** Gets a single series */
export async function getSpecs(
  type: "vega" | "vega-lite" = "vega-lite"
): Promise<VegaChartSpecs> {
  if (type == "vega") {
    return get<VegaChartSpecs>(VEGA_SPECS)
  } else if (type == "vega-lite") {
    return get<VegaChartSpecs>(VEGA_LITE_SPECS)
  }
  return {}
}

export async function getExample(example: string) {
  const url = VEGA_EDITOR_URL + `/spec/vega-lite/${example}.vl.json`
  const result = await get<VisualizationSpec>(url)
  //@ts-ignore
  if (
    result.data &&
    result.data.url &&
    result.data.url.startsWith("data/")
  ) {
    //@ts-ignore
    result.data.url = result.data.url.replace(
      "data/",
      "https://vega.github.io/editor/data/"
    )
  }
  return result
}
